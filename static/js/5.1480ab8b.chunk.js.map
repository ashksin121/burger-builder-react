{"version":3,"sources":["Components/Order/Order.js","Containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","className","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","Order_Order","id","ingredient","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"sLAoCeA,UAjCD,SAAEC,GACZ,IAAMC,EAAc,GAGpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKV,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,OAWX,OACII,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,SACXV,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,qBAAaS,OAAOC,WAAYrB,EAAMsB,OAAQC,QAAS,wCCvBvEC,8LAOEC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,yCAkBtD,IAAIC,EAASpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MASb,OARKL,KAAKzB,MAAM+B,UACZF,EAASJ,KAAKzB,MAAM6B,OAAOtB,IAAI,SAAAR,GAAK,OAChCU,EAAAC,EAAAC,cAACqB,EAAD,CACId,IAAKnB,EAAMkC,GACXhC,YAAaF,EAAMmC,WACnBZ,MAAOvB,EAAMuB,WAIrBb,EAAAC,EAAAC,cAAA,WACKkB,UApCIM,aAyDNC,sBAfS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAMtC,MAAM8B,OACpBE,QAAQM,EAAMtC,MAAMgC,QACpBJ,MAAMU,EAAMC,KAAKX,MACjBC,OAAQS,EAAMC,KAAKV,SAIA,SAAAW,GACvB,MAAO,CACHb,cAAe,SAACC,EAAOC,GAAR,OAAmBW,EAASC,IAAoBb,EAAOC,OAI/DQ,CAA4CK,YAAiBjB,EAAOkB","file":"static/js/5.1480ab8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Order.css';\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n    // console.log(props.ingredients);\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../Components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    // state = {\r\n    //     orders: [],\r\n    //     loading: true\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n        // axios.get('/orders.json')\r\n        //     .then(res => {\r\n        //         const fetchedOrders = [];\r\n        //         for (let key in res.data) {\r\n        //             fetchedOrders.push({\r\n        //                 ...res.data[key],\r\n        //                 id: key\r\n        //             });\r\n        //         }\r\n        //         this.setState({loading: false, orders: fetchedOrders});\r\n        //     })\r\n        //     .catch(err => {\r\n        //         this.setState({loading: false});\r\n        //     });\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredient}\r\n                    price={order.price} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}