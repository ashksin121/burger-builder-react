{"version":3,"sources":["Assets/Images/burger-logo.png","hoc/Au/Aux.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","Components/Burger/BurgerIngredient/BurgerIngredient.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/Burger/OrderSummary/OrderSummary.js","Components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","Containers/BurgerBuilder/BurgerBuilder.js","Components/UI/Input/Input.js","Containers/Checkout/ContactData/ContactData.js","Components/Order/CheckoutSummary/CheckoutSummary.js","Containers/Checkout/Checkout.js","Components/Order/Order.js","Containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Aux","props","children","logo","react_default","a","createElement","className","style","height","src","Logo","alt","navigateItem","react_router_dom","activeClassName","to","link","exact","navigateItems","NavigationItem_NavigationItem","toolbar","onClick","click","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","clicked","sideDrawer","attachedClasses","Au_Aux","Backdrop","closed","Layout","state","showDrawer","sideClosed","_this","setState","sideOpened","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","classname","burger","trans","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","disabledd","added","controls","buildControls","price","toFixed","ctrl","BuildControl_BuildControl","add","delete","pur","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","orderSummary","summary","textTransform","Button_Button","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmed","inherits","createClass","value","_this2","reqInt","interceptors","request","use","req","resInt","response","res","eject","UI_Modal_Modal","message","prices","salad","bacon","cheese","meat","loading","updatePurchase","sum","addIngredient","neew","updated","objectSpread","priceAdd","newPrice","removeIngredient","old","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","join","history","pathname","search","get","then","data","catch","disable","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","OrderSummary","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElement","order","orderData","post","inputChanged","inputIdentifier","updatedForm","updatedElement","target","checkValidity","rules","isValid","trim","formArray","id","config","form","onSubmit","Input_Input","btnType","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","Checkout","goBack","replace","query","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","CheckoutSummary_CheckoutSummary","react_router","path","match","render","Checkout_ContactData_ContactData","ingredientName","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","fetchedOrders","Order_Order","App","hoc_Layout_Layout","component","Orders","BurgerBuilder","Boolean","window","hostname","app","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfb0e1d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport Logo from '../../Assets/Images/burger-logo.png';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => {\r\n    return(\r\n        <div className=\"Logo\" style={{height:props.height}}>\r\n            <img src={Logo} alt=\"MyBurger\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './NavigationItem.css';\r\n\r\nconst navigateItem =(props) => {\r\n    return(\r\n        <li className=\"NavigationItem\">\r\n            <NavLink \r\n            activeClassName=\"active\"\r\n            to={props.link}\r\n            exact>\r\n            {props.children}</NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default navigateItem;","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigateItems =(props) => {\r\n    return(\r\n        <ul className=\"NavigationItems\">\r\n            <NavigationItem\r\n            link=\"/\">Burger Builder</NavigationItem>\r\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default navigateItems;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport '../SideDrawer/DrawerToggle/DrawerToggle.css';\r\n\r\nconst toolbar = (props) => {\r\n    return(\r\n        <header className=\"Toolbar\">\r\n            {/* <DrawerToggle clicked={props.click}/> */}\r\n            <div onClick={props.click} className=\"DrawerToggle\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            <Logo height=\"80%\" />\r\n            <nav className=\"DesktopOnly\">\r\n                <NavigationItems />\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default toolbar; ","import React from 'react';\r\nimport './backdrop.css';\r\n\r\nconst backdrop = (props) => {\r\n    return(\r\n        props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n    );\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport  NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Au/Aux';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = \"SideDrawer Close\";\r\n    if(props.show){\r\n        attachedClasses= \"SideDrawer Open\";\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.show} clicked={props.closed}/>\r\n            <div className={attachedClasses}>\r\n                <Logo height=\"11%\" />\r\n             <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React,{Component} from 'react';\r\nimport Aux from '../Au/Aux';\r\nimport './Layout.css';\r\nimport Toolbar from '../../Components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../Components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showDrawer:false\r\n    }\r\n\r\n    sideClosed = () => {\r\n        this.setState({showDrawer:false})\r\n    }\r\n\r\n    sideOpened = () => {\r\n        this.setState({showDrawer:true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar click={this.sideOpened} />\r\n                <SideDrawer\r\n                show={this.state.showDrawer} \r\n                closed={this.sideClosed} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-fa346.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type)\r\n        {\r\n            case('bread-bottom'):\r\n                ingredient = <div classname=\"BreadBottom\"></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                    ingredient = <div className=\"Meat\"></div>;\r\n                    break;\r\n            case('cheese'):\r\n                    ingredient = <div className=\"Cheese\"></div>;\r\n                    break;\r\n            case('salad'):\r\n                    ingredient = <div className=\"Salad\"></div>;\r\n                    break;\r\n            case('bacon'):\r\n                    ingredient = <div className=\"Bacon\"></div>;\r\n                    break;\r\n            default:\r\n                    ingredient =null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n\r\n    let trans = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        });\r\n    })\r\n    .reduce((arr,el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n\r\n    // console.log(trans);\r\n\r\n    if(trans.length === 0) {\r\n        trans = <p>Please start adding ingredients!!</p>;\r\n    }\r\n\r\n    return(\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {trans}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabledd}>Less</button>\r\n        <button className=\"More \" onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label:'Salad' , type:'salad'},\r\n    {label:'Bacon' , type:'bacon'},\r\n    {label:'Cheese' , type:'cheese'},\r\n    {label:'Meat' , type:'meat'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={() => props.add(ctrl.type)}\r\n            removed={() => props.delete(ctrl.type)}\r\n            disabledd={props.disabled[ctrl.type]} />\r\n        ))} \r\n\r\n        <button \r\n        className=\"OrderButton\"\r\n        disabled={!props.pur}\r\n        onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport './Modal.css';\r\nimport Aux from '../../../hoc/Au/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className=\"Modal\"\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = (props) => {\r\n    return(\r\n        <button\r\n        disabled={props.disabled}\r\n        className={'Button ${props.btnType}'}\r\n        onClick={props.clicked}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../hoc/Au/Aux';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const summary = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return (<li key={igKey}>\r\n            <span style={{textTransform:'capitalize'}}>{igKey}</span>\r\n             : {props.ingredients[igKey]}\r\n             </li>);\r\n    });\r\n\r\n    return (\r\n         <Aux>\r\n             <h3>Your Order</h3>\r\n             <p>A delicious burger with following ingredients:</p>\r\n             <ul>\r\n                 {summary}\r\n             </ul>\r\n             <p><strong>Total Price:{props.price.toFixed(2)}</strong></p>\r\n             <p>Continue to checkout?</p>\r\n             <Button \r\n             clicked={props.purchaseCancelled}>CANCEL</Button>\r\n             <Button \r\n             clicked={props.purchaseContinued}>CONTINUE</Button>\r\n         </Aux>\r\n    );\r\n}\r\n\r\nexport default orderSummary;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => {\r\n    return(\r\n        <div className=\"Loader\">Loading...</div>\r\n    );\r\n}\r\n\r\nexport default spinner;","import React,{Component} from 'react';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\nimport Aux from '../Au/Aux';\r\n\r\nconst withErrorHandler = (WrappedComponent,axios) => {\r\n    return class extends Component {\r\n\r\n        state={\r\n            error:null\r\n        }\r\n\r\n        componentWillMount(){\r\n            this.reqInt = axios.interceptors.request.use(req => {\r\n                this.setState({error:null});\r\n                return req;\r\n            });\r\n            this.resInt = axios.interceptors.response.use(res=>res,error => {\r\n                this.setState({error:error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInt);\r\n            axios.interceptors.response.eject(this.resInt);\r\n        }\r\n\r\n        errorConfirmed=()=>{\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                <Modal \r\n                    show={this.state.error}\r\n                    modalClosed={this.errorConfirmed}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...this.props} />\r\n            </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Aux from '../../hoc/Au/Aux';\r\nimport Burger from '../../Components/Burger/Burger';\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst prices = {\r\n    salad:0.5,\r\n    bacon:0.4,\r\n    cheese:1.3,\r\n    meat:0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: null,\r\n        price : 4,\r\n        pur: false,\r\n        ordered:false,\r\n        loading:false,\r\n        error:null\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        axios.get('https://react-burger-builder-fa346.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ingredients:response.data});\r\n            })\r\n            .catch(error => {\r\n                this.setState({error:true});\r\n            });\r\n    }\r\n\r\n    updatePurchase = (ingredients) => {\r\n        // const ingredients={...this.state.ingredients};\r\n        const sum = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) => {\r\n            return sum+el;\r\n        },0);\r\n        this.setState({pur:sum>0});\r\n    }\r\n\r\n    addIngredient = (type) => {\r\n        const old = this.state.ingredients[type];\r\n        const neew = old+1;\r\n        const updated = {...this.state.ingredients};\r\n        updated[type] = neew;\r\n        const priceAdd = prices[type];\r\n        const oldPrice = this.state.price;\r\n        const newPrice = oldPrice + priceAdd;\r\n        this.setState({price: newPrice, ingredients: updated});\r\n        this.updatePurchase(updated);\r\n    }\r\n\r\n    removeIngredient =(type) => {\r\n        const old = this.state.ingredients[type];\r\n        if(old<=0)\r\n        {\r\n            return;\r\n        }\r\n        const neew = old-1;\r\n        const updated = {...this.state.ingredients};\r\n        updated[type] = neew;\r\n        const priceAdd = prices[type];\r\n        const oldPrice = this.state.price;\r\n        const newPrice = oldPrice - priceAdd;\r\n        this.setState({price: newPrice, ingredients: updated});\r\n        this.updatePurchase(updated);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ordered:true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ordered:false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n       // alert('Order Placed');\r\n  \r\n    // console.log(\"hello\");\r\n    const queryParams =[];\r\n    for (let i in this.state.ingredients){\r\n        queryParams.push(encodeURIComponent(i)+ '=' + encodeURIComponent(this.state.ingredients[i]));\r\n    }\r\n    queryParams.push('price=' + this.state.price);\r\n    const queryString =queryParams.join('&');\r\n    this.props.history.push({\r\n        pathname: '/checkout',\r\n        search: '?' + queryString\r\n    });\r\n    }\r\n\r\n    render () {\r\n\r\n        const disable={\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disable) {\r\n            disable[key] = disable[key]<=0\r\n        }\r\n\r\n        let orderSummary=null;\r\n\r\n        \r\n\r\n        let burger=this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner/>;\r\n        if(this.state.ingredients){\r\n            burger=(\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients} />\r\n                    <BuildControls\r\n                    add={this.addIngredient}\r\n                    delete={this.removeIngredient}\r\n                    disabled={disable}\r\n                    price={this.state.price}\r\n                    pur={this.state.pur}\r\n                    ordered={this.purchaseHandler} />\r\n                </Aux>\r\n            );\r\n            orderSummary=   <OrderSummary ingredients={this.state.ingredients}\r\n                            price={this.state.price}\r\n                            purchaseCancelled={this.purchaseCancelHandler}\r\n                            purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.ordered}\r\n                modalClosed={this.state.purchaseCancelHandler}> \r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement=null;\r\n    let inputClasses =\"InputElement\";\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses=\"InputElement Invalid\";\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case('input'):\r\n            inputElement=<input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />;\r\n            break;\r\n        case('textarea'):\r\n            inputElement=<textarea className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />;\r\n            break;\r\n        case('select'):\r\n            inputElement=<select className={inputClasses} value={props.value} onChange={props.changed} >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>;\r\n            break;\r\n        default:\r\n            inputElement=<input className={inputClasses} {...props.elementConfig} value={props.value} onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default input;","import React,{Component} from 'react';\r\nimport './ContactData.css'; \r\nimport axios from '../../../axios-orders';\r\nimport Button from '../../../Components/UI/Button/Button';\r\nimport Spinner from '../../../Components/UI/Spinner/Spinner';\r\nimport Input from '../../../Components/UI/Input/Input';\r\n\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest ',\r\n                validation:{},\r\n                valid:true\r\n            }\r\n        },\r\n        formIsValid:false,\r\n        loading:false\r\n    }\r\n\r\n    checkValidity(value,rules) {\r\n        let isValid=true;\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid= value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid= value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler =(event) => {\r\n        event.preventDefault();\r\n        this.setState({loading:true});\r\n        const formData= {};\r\n        for (let formElement in this.state.orderForm){\r\n            formData[formElement]=this.state.orderForm[formElement].value;\r\n        }\r\n        const order = {\r\n        ingredient : this.props.ingredients,\r\n        price : this.props.price,\r\n        orderData: formData        \r\n        }\r\n        axios.post('/orders.json',order)\r\n        .then(response => {\r\n            this.setState({loading:false});\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error => {\r\n            this.setState({loading:false});\r\n        });\r\n    }\r\n\r\n    inputChanged = (event,inputIdentifier) => {\r\n        const updatedForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedElement = { \r\n            ...updatedForm[inputIdentifier]\r\n        };\r\n        updatedElement.value=event.target.value;\r\n        updatedElement.touched=true;\r\n        updatedElement.valid=this.checkValidity(updatedElement.value, updatedElement.validation);\r\n        updatedForm[inputIdentifier]=updatedElement;\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedForm) {\r\n            formIsValid=updatedForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm:updatedForm,formIsValid: formIsValid});\r\n    }\r\n\r\n    render(){\r\n\r\n        const formArray = [];\r\n\r\n        for(let key in this.state.orderForm) {\r\n            formArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        touched={formElement.config.touched}\r\n                        shouldValidate={formElement.config.validation}\r\n                        changed={(event) => this.inputChanged(event,formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\r\n            </form>\r\n        );\r\n        if(this.state.loading){\r\n            form=<Spinner />;\r\n        }\r\n        return(\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>Hope it tastes well!!</h1>\r\n            <div style={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n            btnType=\"Danger\"\r\n            clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n            btnType=\"Success\"\r\n            clicked={props.checkoutContinued}>CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React,{Component} from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from '../../Containers/Checkout/ContactData/ContactData';\r\nimport CheckoutSummary from '../../Components/Order/CheckoutSummary/CheckoutSummary';\r\n\r\nclass Checkout extends Component {\r\n\r\n    state={\r\n        ingredients:null,\r\n        price:0\r\n    }\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients ={};\r\n        let price = 0;\r\n        for ( let param of query.entries()) {\r\n            if(param[0] === 'price'){\r\n                price=param[1];\r\n            }else{\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState({ingredients: ingredients, price: price}); \r\n    }\r\n\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinued = () => {\r\n        this.props.history.replace('/checkout/contact_data');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <CheckoutSummary \r\n                ingredients={this.state.ingredients}\r\n                checkoutCancelled={this.checkoutCancelled}\r\n                checkoutContinued={this.checkoutContinued} />\r\n                <Route path={this.props.match.path + '/contact_data'} \r\n                render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.price} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport './Order.css';\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n    // console.log(props.ingredients);\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport Order from '../../Components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, orders: fetchedOrders});\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredient}\r\n                        price={order.price} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders,axios);","import React, { Component } from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './Containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './Containers/Checkout/Checkout';\nimport Orders from './Containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n            <Switch>\n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/orders\" component={Orders} />\n              <Route path=\"/\" exact component={BurgerBuilder} />\n            </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app =(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}